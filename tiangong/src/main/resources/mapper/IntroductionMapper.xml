<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tiangong.dao.IntroductionMapper">
  <resultMap id="BaseResultMap" type="cn.tiangong.entity.Introduction">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="entries_id" jdbcType="INTEGER" property="entries_id" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="user_id" jdbcType="INTEGER" property="user_id" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="is_used" jdbcType="BIT" property="is_used" />
    <result column="cover_url" jdbcType="VARCHAR" property="cover_url" />
    <result column="ischeck" jdbcType="INTEGER" property="ischeck" />
    <result column="des" jdbcType="VARCHAR" property="des" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.tiangong.entity.Introduction">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, entries_id, version, user_id, time, reason, is_used, cover_url, ischeck, des
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.tiangong.entity.IntroductionExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from introduction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.tiangong.entity.IntroductionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from introduction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from introduction
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from introduction
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.tiangong.entity.IntroductionExample">
    delete from introduction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.tiangong.entity.Introduction">
    insert into introduction (id, entries_id, version, 
      user_id, time, reason, 
      is_used, cover_url, ischeck, 
      des, content)
    values (#{id,jdbcType=INTEGER}, #{entries_id,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, 
      #{user_id,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{reason,jdbcType=VARCHAR}, 
      #{is_used,jdbcType=BIT}, #{cover_url,jdbcType=VARCHAR}, #{ischeck,jdbcType=INTEGER}, 
      #{des,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.tiangong.entity.Introduction">
    insert into introduction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="entries_id != null">
        entries_id,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="is_used != null">
        is_used,
      </if>
      <if test="cover_url != null">
        cover_url,
      </if>
      <if test="ischeck != null">
        ischeck,
      </if>
      <if test="des != null">
        des,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="entries_id != null">
        #{entries_id,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="is_used != null">
        #{is_used,jdbcType=BIT},
      </if>
      <if test="cover_url != null">
        #{cover_url,jdbcType=VARCHAR},
      </if>
      <if test="ischeck != null">
        #{ischeck,jdbcType=INTEGER},
      </if>
      <if test="des != null">
        #{des,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.tiangong.entity.IntroductionExample" resultType="java.lang.Long">
    select count(*) from introduction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update introduction
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.entries_id != null">
        entries_id = #{record.entries_id,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.user_id != null">
        user_id = #{record.user_id,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.is_used != null">
        is_used = #{record.is_used,jdbcType=BIT},
      </if>
      <if test="record.cover_url != null">
        cover_url = #{record.cover_url,jdbcType=VARCHAR},
      </if>
      <if test="record.ischeck != null">
        ischeck = #{record.ischeck,jdbcType=INTEGER},
      </if>
      <if test="record.des != null">
        des = #{record.des,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update introduction
    set id = #{record.id,jdbcType=INTEGER},
      entries_id = #{record.entries_id,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      user_id = #{record.user_id,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      reason = #{record.reason,jdbcType=VARCHAR},
      is_used = #{record.is_used,jdbcType=BIT},
      cover_url = #{record.cover_url,jdbcType=VARCHAR},
      ischeck = #{record.ischeck,jdbcType=INTEGER},
      des = #{record.des,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update introduction
    set id = #{record.id,jdbcType=INTEGER},
      entries_id = #{record.entries_id,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      user_id = #{record.user_id,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      reason = #{record.reason,jdbcType=VARCHAR},
      is_used = #{record.is_used,jdbcType=BIT},
      cover_url = #{record.cover_url,jdbcType=VARCHAR},
      ischeck = #{record.ischeck,jdbcType=INTEGER},
      des = #{record.des,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.tiangong.entity.Introduction">
    update introduction
    <set>
      <if test="entries_id != null">
        entries_id = #{entries_id,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="is_used != null">
        is_used = #{is_used,jdbcType=BIT},
      </if>
      <if test="cover_url != null">
        cover_url = #{cover_url,jdbcType=VARCHAR},
      </if>
      <if test="ischeck != null">
        ischeck = #{ischeck,jdbcType=INTEGER},
      </if>
      <if test="des != null">
        des = #{des,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.tiangong.entity.Introduction">
    update introduction
    set entries_id = #{entries_id,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      user_id = #{user_id,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      reason = #{reason,jdbcType=VARCHAR},
      is_used = #{is_used,jdbcType=BIT},
      cover_url = #{cover_url,jdbcType=VARCHAR},
      ischeck = #{ischeck,jdbcType=INTEGER},
      des = #{des,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.tiangong.entity.Introduction">
    update introduction
    set entries_id = #{entries_id,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      user_id = #{user_id,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      reason = #{reason,jdbcType=VARCHAR},
      is_used = #{is_used,jdbcType=BIT},
      cover_url = #{cover_url,jdbcType=VARCHAR},
      ischeck = #{ischeck,jdbcType=INTEGER},
      des = #{des,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="clearVersion" parameterType="java.lang.Integer">
  update introduction set is_used = 0 where entries_id=#{id}
  </update>
  <select id="getVersionListWithAva" parameterType="java.lang.Integer" resultType="map">
  	select introduction.*,tb_user.avatar_url from introduction,tb_user where 
  	introduction.entries_id=#{id} and tb_user.id = introduction.user_id
  </select>
</mapper>